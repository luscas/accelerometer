extends ./layout/app.jade

block styles
	style.
		body {
			padding: 0;
			margin: 0;
		}

		.instructions {
			text-align: center;
			margin-top: 40px;
			font-size: 2em;
		}

		.ball {
			position: absolute;
			width: 100px;
			height: 100px;
			border-radius: 100%;
			background: #000;
			display: none;
			top: 100px;
			left: 100px;
		}

block content
	div(id='instructions', class="instructions").
		Visit #[strong= "http://" + host + ":" + port + "/" + id] on your device to get started.
	
	div(id="ball", class="ball")

block scripts
	script(src="/socket.io/socket.io.js")
	script.
		window.requestAnimationFrame = (function(){
			return  window.requestAnimationFrame       ||
					window.webkitRequestAnimationFrame ||
					window.mozRequestAnimationFrame    ||
					function( callback ){
						window.setTimeout(callback, 1000 / 60);
					};
		})();

		var socket = io.connect('http://#{host}:#{port}/#{id}');

		var ball = document.getElementById('ball');

		var windowWidth  = window.innerWidth;
		var windowHeight = window.innerHeight;
		var ballSize     = 100;

		ball.velocity = {
			x: 0,
			y: 0
		};

		ball.position = {
			x: 0,
			y: 0
		};
		
		socket.on('connected', () => {
			console.log('connected');
			ball.style.display = 'block';
			document.getElementById('instructions').style.display = 'none';
		});

		socket.on('updateBall', (data) => {
			for(var p = 0; p < data.length; p++) {
				ball.velocity.x = data[p][0]; // Gamma
				ball.velocity.y = data[p][1]; // Beta
			}
		});

		(function update() {

			// Update position
			ball.position.x += ball.velocity.x;
			ball.position.y += ball.velocity.y;

			// Collision detection
			if (ball.position.x > (windowWidth - ballSize) && ball.velocity.x > 0) {
				ball.position.x = windowWidth - ballSize;
			}

			if (ball.position.x < 0 && ball.velocity.x < 0) {
				ball.position.x = 0;
			}

			if (ball.position.y < 0 && ball.velocity.y < 0) {
				ball.position.y = 0;
			}

			if (ball.position.y > (windowHeight - ballSize) && ball.velocity.y > 0) {
				ball.position.y = windowHeight - ballSize;
			}

			// Update CSS position
			ball.style.top = ball.position.y + 'px';
			ball.style.left = ball.position.x + 'px';

			requestAnimationFrame(update);
		})();